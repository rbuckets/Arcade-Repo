#BlueJ class context
comment0.target=Block
comment0.text=\n\ Class\ Block\ encapsulates\ a\ Block\ abstraction\ which\ can\ be\ placed\ into\ a\n\ Gridworld\ style\ grid\n\ You\ are\ expected\ to\ comment\ this\ class\ according\ to\ the\ style\ guide.\n\ \n\ @author\ Aditya\ Singhvi\n\ @version\ \ March\ 6\ 2019\n
comment1.params=
comment1.target=Block()
comment1.text=\n\ constructs\ a\ blue\ block,\ because\ blue\ is\ the\ greatest\ color\ ever\!\n
comment2.params=
comment2.target=java.awt.Color\ getColor()
comment2.text=\n\ Returns\ the\ color\ of\ the\ block.\ \n\ \n\ @return\ \ \ The\ Color\ of\ the\ block.\n
comment3.params=newColor
comment3.target=void\ setColor(java.awt.Color)
comment3.text=\n\ Sets\ the\ color\ of\ the\ block\ to\ newColor.\n\ \n\ @param\ newColor\ \ \ The\ color\ that\ the\ color\ of\ the\ block\ will\ be\ set\ to.\n
comment4.params=
comment4.target=MyBoundedGrid\ getGrid()
comment4.text=\n\ Returns\ the\ grid\ that\ the\ block\ is\ contained\ in.\n\ \n\ @return\ \ \ The\ grid\ that\ the\ block\ is\ stored\ in.\n
comment5.params=
comment5.target=Location\ getLocation()
comment5.text=\n\ Returns\ the\ current\ location\ of\ the\ block.\n\ \n\ @return\ The\ current\ location\ of\ the\ block.\n
comment6.params=
comment6.target=void\ removeSelfFromGrid()
comment6.text=\n\ Removes\ the\ block\ from\ the\ grid\ it\ is\ currently\ in,\ setting\ both\ the\ \n\ block's\ grid\ and\ the\ block's\ location\ to\ null.\ Also\ updates\ the\ grid\ \n\ to\ remove\ the\ block\ from\ the\ location\ it\ was\ in.\n\ \n\ @postcondition\ \ \ \ The\ block's\ grid\ has\ been\ set\ to\ null.\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ The\ block's\ location\ has\ been\ set\ to\ null.\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ The\ original\ grid\ of\ the\ block\ has\ been\ updated\ to\ not\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ contain\ this\ block\ anymore.\n
comment7.params=gr\ loc
comment7.target=void\ putSelfInGrid(MyBoundedGrid,\ Location)
comment7.text=\n\ Puts\ the\ block\ in\ grid\ gr\ at\ Location\ loc.\ Sets\ the\ blocks\ grid\ and\ \n\ location\ to\ gr\ and\ loc\ respectively,\ removes\ the\ block\ from\ its\ \n\ previous\ location,\ and\ updates\ gr\ to\ contain\ the\ block.\n\ \n\ @param\ gr\ \ \ \ \ The\ new\ grid\ that\ the\ block\ will\ be\ in.\ \n\ @param\ loc\ \ \ \ The\ new\ location\ of\ the\ block.\n\ @precondition\ \ \ \ \ loc\ must\ be\ a\ valid\ location\ in\ Grid\ gr.\ \n\ @postcondition\ \ \ \ The\ blocks\ grid\ and\ location\ have\ been\ updated.\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Both\ the\ original\ and\ final\ grids\ have\ been\ updated\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ with\ respect\ to\ the\ block.\n
comment8.params=newLocation
comment8.target=void\ moveTo(Location)
comment8.text=\n\ Moves\ the\ block\ to\ Location\ newLocation\ in\ its\ current\ grid.\ Updates\ \n\ the\ grid\ and\ location\ of\ the\ block,\ as\ well\ as\ the\ grid\ that\ the\ block\ \n\ is\ in\ to\ convey\ the\ change\ of\ location.\n\ \n\ @param\ newLocation\ \ \ \ The\ location\ that\ the\ block\ should\ be\ moved\ to.\n\ @precondition\ \ \ \ \ newLocation\ is\ a\ valid\ location\ in\ the\ current\ grid.\ \n\ @postconditon\ \ \ \ \ The\ location\ of\ the\ block\ has\ been\ set\ to\ newLocation.\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ The\ grid\ has\ been\ updated\ to\ reflect\ the\ new\ location\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ of\ the\ block.\n\ \n
comment9.params=
comment9.target=java.lang.String\ toString()
comment9.text=\n\ returns\ a\ string\ with\ the\ location\ and\ color\ of\ this\ block\n\ \n\ @return\ A\ string\ with\ the\ location\ and\ color\ of\ this\ Block.\ \n
numComments=10
