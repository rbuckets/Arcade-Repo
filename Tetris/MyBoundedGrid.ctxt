#BlueJ class context
comment0.target=MyBoundedGrid
comment0.text=\n\ The\ MyBoundedGrid\ creates\ a\ grid\ capable\ of\ storing\ objects\ of\ type\ E.\ The\n\ grid\ is\ bounded\ and\ has\ a\ maximum\ number\ of\ rows\ and\ columns.\n\n\ @author\ \ Aditya\ Singhvi\n\ @version\ March\ 6\ 2019\n\ \n\ @param\ <E>\ The\ type\ of\ object\ to\ be\ stored\ in\ the\ MyBoundedGrid.\n
comment1.params=r\ c
comment1.target=MyBoundedGrid(int,\ int)
comment1.text=\n\ Creates\ a\ new\ MyBoundedGrid\ with\ the\ number\ of\ rows\ r\ and\ the\ number\ of\ \n\ cols\ c.\ \n\ \n\ @param\ r\ \ \ \ \ The\ number\ of\ rows\ in\ the\ MyBoundedGrid.\n\ @param\ c\ \ \ \ \ The\ number\ of\ columns\ in\ the\ MyBoundedGrid.\ \n\ @postconditon\ \ \ \ A\ new\ MyBoundedGrid\ has\ been\ created\ with\ numRows\ r\ and\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ numCols\ c.\ \n
comment10.params=
comment10.target=java.util.ArrayList\ getOccupiedLocations()
comment10.text=\n\ Creates\ and\ returns\ an\ ArrayList\ of\ all\ occupied\ locations\ in\ the\ grid.\ \n\ \n\ @return\ \ An\ ArrayList\ of\ all\ occupied\ Locations\ in\ the\ grid.\ \n
comment2.params=
comment2.target=int\ getNumRows()
comment2.text=\n\ Returns\ the\ number\ of\ rows\ in\ this\ grid.\ \n\ \n\ @return\ \ The\ number\ of\ rows\ in\ this\ grid.\n
comment3.params=
comment3.target=int\ getNumCols()
comment3.text=\n\ Returns\ the\ number\ of\ columns\ in\ this\ grid.\ \n\ \n\ @return\ \ The\ number\ of\ columns\ in\ this\ grid.\n
comment4.params=
comment4.target=void\ clearAll()
comment4.text=\n\ Clears\ all\ objects\ on\ this\ grid,\ setting\ every\ element\ to\ null.\n\ \n\ @postconditon\ \ \ \ No\ objects\ remain\ on\ this\ grid.\ \n
comment5.params=loc
comment5.target=boolean\ isValid(Location)
comment5.text=\n\ Checks\ if\ a\ location\ is\ valid\ in\ this\ grid\ by\ ensuring\ that\ the\ row\ and\ \n\ column\ of\ the\ location\ are\ non-negative\ and\ less\ than\ the\ maximum\ row\ and\n\ column.\n\ \n\ @param\ loc\ \ \ The\ Location\ to\ be\ checked\ for\ validity.\ \n\ @return\ \ true\ if\ the\ location\ is\ valid\n\ \ \ \ \ \ \ \ \ \ false\ otherwise\n
comment6.params=loc\ obj
comment6.target=java.lang.Object\ put(Location,\ java.lang.Object)
comment6.text=\n\ Puts\ the\ object\ obj\ of\ type\ E\ at\ Location\ loc\ in\ the\ grid.\ Returns\ the\n\ object\ that\ was\ previously\ stored\ at\ that\ location.\ \n\ \n\ @param\ loc\ \ \ \ The\ location\ at\ which\ to\ put\ the\ obj\n\ @param\ obj\ \ \ \ The\ object\ to\ be\ put\ at\ Location\ loc\n\ @return\ \ \ \ \ \ The\ object\ previously\ stored\ at\ Location\ loc.\ \n
comment7.params=loc
comment7.target=java.lang.Object\ remove(Location)
comment7.text=\n\ Removes\ and\ returns\ the\ object\ at\ Location\ loc.\ \n\ \n\ @param\ loc\ \ \ The\ Location\ from\ which\ the\ object\ is\ to\ be\ removed.\ \n\ @return\ \ \ \ \ \ The\ object\ that\ was\ just\ removed\ from\ loc.\ \n
comment8.params=loc
comment8.target=java.lang.Object\ get(Location)
comment8.text=\n\ Returns\ the\ object\ stored\ at\ Location\ loc\ in\ the\ grid.\ \n\ \n\ @param\ loc\ \ \ The\ location\ from\ which\ the\ object\ is\ to\ be\ retrieved.\n\ @return\ \ \ \ \ \ The\ object\ stored\ at\ loc.\ \n
comment9.params=loc
comment9.target=boolean\ isEmpty(Location)
comment9.text=\n\ Checks\ if\ a\ given\ location\ is\ empty\ and\ valid.\ \n\ Returns\ true\ if\ it\ is\ both\ empty\ and\ valid,\ false\ otherwise\n\ \n\ @param\ loc\ \ \ The\ location\ to\ be\ checked\n\ @return\ \ \ \ \ \ true\ if\ the\ location\ is\ empty\ and\ valid\ for\ this\ grid\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ false\ otherwise\n
numComments=11
