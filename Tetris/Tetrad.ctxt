#BlueJ class context
comment0.target=Tetrad
comment0.text=\n\ The\ Tetrad\ class\ creates\ and\ stores\ information\ for\ Tetrads,\ which\ are\ \n\ collections\ of\ four\ blocks.\ A\ tetrad\ keeps\ track\ of\ what\ blocks\ it\ has,\n\ where\ these\ blocks\ are\ located,\ and\ on\ what\ Tetris\ board.\ There\ are\ 7\ \n\ types\ of\ tetrads.\ \n\n\ @author\ \ Aditya\ Singhvi\n\ @version\ Mar.\ 9\ 2019\n
comment1.params=grid
comment1.target=Tetrad(MyBoundedGrid)
comment1.text=\n\ Constructor\ for\ objects\ of\ class\ Tetrad.\ Creates\ a\ random\ Tetrad\ on\ the\n\ given\ grid.\ \n\ \n\ @param\ grid\ \ The\ grid\ on\ which\ the\ Tetrad\ will\ exist.\n
comment10.params=
comment10.target=boolean\ rotate()
comment10.text=\n\ Rotates\ this\ tetrad\ 90\u02DA\ clockwise,\ if\ possible\ to\ do\ so.\ \n\ Returns\ true\ if\ it\ was\ possible\ and\ the\ Tetrad\ was\ rotated,\n\ false\ otherwise.\n\ \n\ @postcondition\ Attempts\ to\ rotate\ this\ tetrad\ 90\u02DA\ clockwise,\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ the\ new\ positions\ are\ valid\ and\ empty;\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ returns\ true\ if\ successful\ and\ false\ otherwise\n\ @return\ \ true\ if\ this\ Tetrad\ could\ be\ and\ was\ rotated.\n\ \ \ \ \ \ \ \ \ \ false\ otherwise.\n
comment2.params=grid\ myType
comment2.target=Tetrad(MyBoundedGrid,\ int)
comment2.text=\n\ Constructor\ for\ a\ tetrad.\ Creates\ a\ tetrad\ of\ type\ myType\ (represented\n\ by\ an\ integer\ from\ 0\ to\ 6)\ on\ the\ given\ grid.\ \n\ \n\ @param\ grid\ The\ grid\ on\ which\ the\ tetrad\ is\ to\ be\ created\n\ @param\ myType\ \ \ \ The\ type\ of\ the\ tetrad\ to\ be\ created.\n
comment3.params=
comment3.target=void\ remove()
comment3.text=\n\ Removes\ the\ tetrad\ from\ its\ own\ board,\ setting\ the\ locations\ of\ all\ its\n\ blocks\ to\ null.\n\ \n\ @postcondition\ \ \ This\ tetrad\ has\ been\ removed\ from\ its\ board.\n
comment4.params=grid\ locs
comment4.target=void\ addToLocations(MyBoundedGrid,\ Location[])
comment4.text=\n\ Puts\ the\ tetrad\ blocks\ onto\ the\ specified\ tetris\ board\ at\ the\ \n\ specified\ locations.\n\ \n\ @precondition\ \ \ \ \ The\ blocks\ are\ not\ in\ any\ grid\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ There\ are\ exactly\ 4\ specified\ locations.\n\ @postcondition\ The\ locations\ of\ the\ blocks\ in\ the\ tetrad\ match\ locs.\n\ @param\ grid\ \ \ The\ grid\ to\ which\ the\ tetrad\ is\ to\ be\ added.\n\ @param\ locs\ \ \ The\ locations\ of\ the\ blocks\ on\ the\ grid\ where\ the\ tetrad\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ is\ to\ be\ added.\n\n
comment5.params=
comment5.target=Location[]\ removeBlocks()
comment5.text=\n\ Removes\ the\ tetrad\ blocks\ from\ their\ current\ grid\ and\ returns\ the\n\ previous\ locations\ of\ the\ blocks.\n\ \n\ @precondition\ \ \ \ Blocks\ are\ in\ the\ grid.\n\ @postcondition\ \ \ Returns\ old\ locations\ of\ blocks;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ blocks\ have\ been\ removed\ from\ grid.\n\ @return\ \ An\ array\ of\ 4\ Locations\ that\ shows\ the\ previous\ locations\ of\ \n\ \ \ \ \ \ \ \ \ \ the\ blocks\ of\ this\ tetrad.\n
comment6.params=
comment6.target=Location[]\ getLocs()
comment6.text=\n\ Returns\ the\ locations\ of\ this\ tetrad\ in\ a\ Location\ array\ containing\n\ four\ elements,\ with\ each\ element\ representing\ the\ location\ of\ one\ of\ \n\ this\ Tetrads\ blocks\ on\ its\ grid.\n\ \n\ @return\ \ A\ Location\ array\ containing\ four\ elements,\ with\ each\ element\ \n\ \ \ \ \ \ \ \ \ \ representing\ the\ location\ of\ one\ of\ this\ Tetrads\ blocks\ on\ \n\ \ \ \ \ \ \ \ \ \ its\ grid.\n
comment7.params=grid\ locs
comment7.target=boolean\ areEmpty(MyBoundedGrid,\ Location[])
comment7.text=\n\ Checks\ if\ the\ specified\ locations\ in\ the\ specified\ grid\ are\ empty.\ \n\ Returns\ true\ if\ the\ locations\ are\ empty,\ false\ otherwise.\n\ \n\ @precondition\ \ Each\ Location\ in\ locs\ must\ be\ a\ valid\ location\ in\ grid.\n\ @postcondition\ Returns\ true\ if\ each\ of\ locs\ is\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ valid\ and\ empty\ in\ grid;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ false\ otherwise.\n\ @param\ grid\ \ The\ grid\ on\ which\ the\ locations\ are\ to\ be\ checked\ for\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ emptiness.\n\ @param\ locs\ \ The\ locations\ to\ be\ checked\ for\ emptiness.\n\ @return\ \ \ \ \ \ true\ if\ every\ Location\ in\ locs\ is\ empty\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ false\ otherwise\ \ \ \ \n
comment8.params=deltaRow\ deltaCol
comment8.target=boolean\ translate(int,\ int)
comment8.text=\n\ Translates\ this\ tetrad\ right\ by\ deltaCol\ and\ down\ by\ deltaRow,\ if\n\ possible.\ Returns\ true\ if\ it\ was\ possible\ and\ the\ Tetrad\ was\ translated,\n\ false\ otherwise.\n\ \n\ @postcondition\ Attempts\ to\ move\ this\ tetrad\ deltaRow\ rows\ down\ and\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ deltaCol\ columns\ to\ the\ right,\ if\ those\ positions\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ are\ valid\ and\ empty;\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ returns\ true\ if\ successful\ and\ false\ otherwise.\n\ @param\ deltaRow\ \ The\ number\ of\ rows\ to\ be\ shifted\ down\ by.\n\ @param\ deltaCol\ \ The\ number\ of\ columns\ to\ be\ shifted\ right\ by.\ \n\ @return\ \ true\ if\ this\ Tetrad\ could\ be\ and\ was\ translated.\n\ \ \ \ \ \ \ \ \ \ false\ otherwise.\n
comment9.params=
comment9.target=int\ getType()
comment9.text=\n\ Returns\ the\ type\ of\ this\ tetrad,\ represented\ as\ an\ integer\ between\ \n\ 0\ and\ 6.\n\ \n\ @return\ \ the\ type\ of\ this\ tetrad,\ represented\ as\ an\ integer\ between\ \n\ \ \ \ \ \ \ \ \ \ 0\ and\ 6.\ \n
numComments=11
